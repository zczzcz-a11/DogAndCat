{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, computed, reactive, defineComponent } from \"vue\";\nimport { clamp, numericProp, preventDefault, createNamespace, makeRequiredProp } from \"../utils/index.mjs\";\nimport { useTouch } from \"../composables/use-touch.mjs\";\nimport { useEventListener } from \"@vant/use\";\nimport { Image } from \"../image/index.mjs\";\nimport { Loading } from \"../loading/index.mjs\";\nimport { SwipeItem } from \"../swipe-item/index.mjs\";\nvar getDistance = function getDistance(touches) {\n  return Math.sqrt(Math.pow(touches[0].clientX - touches[1].clientX, 2) + Math.pow(touches[0].clientY - touches[1].clientY, 2));\n};\nvar bem = createNamespace(\"image-preview\")[1];\nvar stdin_default = defineComponent({\n  props: {\n    src: String,\n    show: Boolean,\n    active: Number,\n    minZoom: makeRequiredProp(numericProp),\n    maxZoom: makeRequiredProp(numericProp),\n    rootWidth: makeRequiredProp(Number),\n    rootHeight: makeRequiredProp(Number)\n  },\n  emits: [\"scale\", \"close\"],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n      slots = _ref.slots;\n    var state = reactive({\n      scale: 1,\n      moveX: 0,\n      moveY: 0,\n      moving: false,\n      zooming: false,\n      imageRatio: 0,\n      displayWidth: 0,\n      displayHeight: 0\n    });\n    var touch = useTouch();\n    var swipeItem = ref();\n    var vertical = computed(function () {\n      var rootWidth = props.rootWidth,\n        rootHeight = props.rootHeight;\n      var rootRatio = rootHeight / rootWidth;\n      return state.imageRatio > rootRatio;\n    });\n    var imageStyle = computed(function () {\n      var scale = state.scale,\n        moveX = state.moveX,\n        moveY = state.moveY,\n        moving = state.moving,\n        zooming = state.zooming;\n      var style = {\n        transitionDuration: zooming || moving ? \"0s\" : \".3s\"\n      };\n      if (scale !== 1) {\n        var offsetX = moveX / scale;\n        var offsetY = moveY / scale;\n        style.transform = \"scale(\".concat(scale, \", \").concat(scale, \") translate(\").concat(offsetX, \"px, \").concat(offsetY, \"px)\");\n      }\n      return style;\n    });\n    var maxMoveX = computed(function () {\n      if (state.imageRatio) {\n        var rootWidth = props.rootWidth,\n          rootHeight = props.rootHeight;\n        var displayWidth = vertical.value ? rootHeight / state.imageRatio : rootWidth;\n        return Math.max(0, (state.scale * displayWidth - rootWidth) / 2);\n      }\n      return 0;\n    });\n    var maxMoveY = computed(function () {\n      if (state.imageRatio) {\n        var rootWidth = props.rootWidth,\n          rootHeight = props.rootHeight;\n        var displayHeight = vertical.value ? rootHeight : rootWidth * state.imageRatio;\n        return Math.max(0, (state.scale * displayHeight - rootHeight) / 2);\n      }\n      return 0;\n    });\n    var setScale = function setScale(scale) {\n      scale = clamp(scale, +props.minZoom, +props.maxZoom + 1);\n      if (scale !== state.scale) {\n        state.scale = scale;\n        emit(\"scale\", {\n          scale: scale,\n          index: props.active\n        });\n      }\n    };\n    var resetScale = function resetScale() {\n      setScale(1);\n      state.moveX = 0;\n      state.moveY = 0;\n    };\n    var toggleScale = function toggleScale() {\n      var scale = state.scale > 1 ? 1 : 2;\n      setScale(scale);\n      state.moveX = 0;\n      state.moveY = 0;\n    };\n    var fingerNum;\n    var startMoveX;\n    var startMoveY;\n    var startScale;\n    var startDistance;\n    var doubleTapTimer;\n    var touchStartTime;\n    var onTouchStart = function onTouchStart(event) {\n      var touches = event.touches;\n      var offsetX = touch.offsetX;\n      touch.start(event);\n      fingerNum = touches.length;\n      startMoveX = state.moveX;\n      startMoveY = state.moveY;\n      touchStartTime = Date.now();\n      state.moving = fingerNum === 1 && state.scale !== 1;\n      state.zooming = fingerNum === 2 && !offsetX.value;\n      if (state.zooming) {\n        startScale = state.scale;\n        startDistance = getDistance(event.touches);\n      }\n    };\n    var onTouchMove = function onTouchMove(event) {\n      var touches = event.touches;\n      touch.move(event);\n      if (state.moving || state.zooming) {\n        preventDefault(event, true);\n      }\n      if (state.moving) {\n        var deltaX = touch.deltaX,\n          deltaY = touch.deltaY;\n        var moveX = deltaX.value + startMoveX;\n        var moveY = deltaY.value + startMoveY;\n        state.moveX = clamp(moveX, -maxMoveX.value, maxMoveX.value);\n        state.moveY = clamp(moveY, -maxMoveY.value, maxMoveY.value);\n      }\n      if (state.zooming && touches.length === 2) {\n        var distance = getDistance(touches);\n        var scale = startScale * distance / startDistance;\n        setScale(scale);\n      }\n    };\n    var checkTap = function checkTap() {\n      if (fingerNum > 1) {\n        return;\n      }\n      var offsetX = touch.offsetX,\n        offsetY = touch.offsetY;\n      var deltaTime = Date.now() - touchStartTime;\n      var TAP_TIME = 250;\n      var TAP_OFFSET = 5;\n      if (offsetX.value < TAP_OFFSET && offsetY.value < TAP_OFFSET && deltaTime < TAP_TIME) {\n        if (doubleTapTimer) {\n          clearTimeout(doubleTapTimer);\n          doubleTapTimer = null;\n          toggleScale();\n        } else {\n          doubleTapTimer = setTimeout(function () {\n            emit(\"close\");\n            doubleTapTimer = null;\n          }, TAP_TIME);\n        }\n      }\n    };\n    var onTouchEnd = function onTouchEnd(event) {\n      var stopPropagation = false;\n      if (state.moving || state.zooming) {\n        stopPropagation = true;\n        if (state.moving && startMoveX === state.moveX && startMoveY === state.moveY) {\n          stopPropagation = false;\n        }\n        if (!event.touches.length) {\n          if (state.zooming) {\n            state.moveX = clamp(state.moveX, -maxMoveX.value, maxMoveX.value);\n            state.moveY = clamp(state.moveY, -maxMoveY.value, maxMoveY.value);\n            state.zooming = false;\n          }\n          state.moving = false;\n          startMoveX = 0;\n          startMoveY = 0;\n          startScale = 1;\n          if (state.scale < 1) {\n            resetScale();\n          }\n          if (state.scale > props.maxZoom) {\n            state.scale = +props.maxZoom;\n          }\n        }\n      }\n      preventDefault(event, stopPropagation);\n      checkTap();\n      touch.reset();\n    };\n    var onLoad = function onLoad(event) {\n      var _event$target = event.target,\n        naturalWidth = _event$target.naturalWidth,\n        naturalHeight = _event$target.naturalHeight;\n      state.imageRatio = naturalHeight / naturalWidth;\n    };\n    watch(function () {\n      return props.active;\n    }, resetScale);\n    watch(function () {\n      return props.show;\n    }, function (value) {\n      if (!value) {\n        resetScale();\n      }\n    });\n    useEventListener(\"touchmove\", onTouchMove, {\n      target: computed(function () {\n        var _a;\n        return (_a = swipeItem.value) == null ? void 0 : _a.$el;\n      })\n    });\n    return function () {\n      var imageSlots = {\n        loading: function loading() {\n          return _createVNode(Loading, {\n            \"type\": \"spinner\"\n          }, null);\n        }\n      };\n      return _createVNode(SwipeItem, {\n        \"ref\": swipeItem,\n        \"class\": bem(\"swipe-item\"),\n        \"onTouchstartPassive\": onTouchStart,\n        \"onTouchend\": onTouchEnd,\n        \"onTouchcancel\": onTouchEnd\n      }, {\n        \"default\": function _default() {\n          return [slots.image ? _createVNode(\"div\", {\n            \"class\": bem(\"image-wrap\")\n          }, [slots.image({\n            src: props.src\n          })]) : _createVNode(Image, {\n            \"src\": props.src,\n            \"fit\": \"contain\",\n            \"class\": bem(\"image\", {\n              vertical: vertical.value\n            }),\n            \"style\": imageStyle.value,\n            \"onLoad\": onLoad\n          }, imageSlots)];\n        }\n      });\n    };\n  }\n});\nexport { stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","ref","watch","computed","reactive","defineComponent","clamp","numericProp","preventDefault","createNamespace","makeRequiredProp","useTouch","useEventListener","Image","Loading","SwipeItem","getDistance","touches","Math","sqrt","pow","clientX","clientY","bem","stdin_default","props","src","String","show","Boolean","active","Number","minZoom","maxZoom","rootWidth","rootHeight","emits","setup","_ref","emit","slots","state","scale","moveX","moveY","moving","zooming","imageRatio","displayWidth","displayHeight","touch","swipeItem","vertical","rootRatio","imageStyle","style","transitionDuration","offsetX","offsetY","transform","concat","maxMoveX","value","max","maxMoveY","setScale","index","resetScale","toggleScale","fingerNum","startMoveX","startMoveY","startScale","startDistance","doubleTapTimer","touchStartTime","onTouchStart","event","start","length","Date","now","onTouchMove","move","deltaX","deltaY","distance","checkTap","deltaTime","TAP_TIME","TAP_OFFSET","clearTimeout","setTimeout","onTouchEnd","stopPropagation","reset","onLoad","_event$target","target","naturalWidth","naturalHeight","_a","$el","imageSlots","loading","_default","image","default"],"sources":["E:/vue3/pet-home-master/pet-client/node_modules/vant/es/image-preview/ImagePreviewItem.mjs"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, computed, reactive, defineComponent } from \"vue\";\nimport { clamp, numericProp, preventDefault, createNamespace, makeRequiredProp } from \"../utils/index.mjs\";\nimport { useTouch } from \"../composables/use-touch.mjs\";\nimport { useEventListener } from \"@vant/use\";\nimport { Image } from \"../image/index.mjs\";\nimport { Loading } from \"../loading/index.mjs\";\nimport { SwipeItem } from \"../swipe-item/index.mjs\";\nconst getDistance = (touches) => Math.sqrt((touches[0].clientX - touches[1].clientX) ** 2 + (touches[0].clientY - touches[1].clientY) ** 2);\nconst bem = createNamespace(\"image-preview\")[1];\nvar stdin_default = defineComponent({\n  props: {\n    src: String,\n    show: Boolean,\n    active: Number,\n    minZoom: makeRequiredProp(numericProp),\n    maxZoom: makeRequiredProp(numericProp),\n    rootWidth: makeRequiredProp(Number),\n    rootHeight: makeRequiredProp(Number)\n  },\n  emits: [\"scale\", \"close\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const state = reactive({\n      scale: 1,\n      moveX: 0,\n      moveY: 0,\n      moving: false,\n      zooming: false,\n      imageRatio: 0,\n      displayWidth: 0,\n      displayHeight: 0\n    });\n    const touch = useTouch();\n    const swipeItem = ref();\n    const vertical = computed(() => {\n      const {\n        rootWidth,\n        rootHeight\n      } = props;\n      const rootRatio = rootHeight / rootWidth;\n      return state.imageRatio > rootRatio;\n    });\n    const imageStyle = computed(() => {\n      const {\n        scale,\n        moveX,\n        moveY,\n        moving,\n        zooming\n      } = state;\n      const style = {\n        transitionDuration: zooming || moving ? \"0s\" : \".3s\"\n      };\n      if (scale !== 1) {\n        const offsetX = moveX / scale;\n        const offsetY = moveY / scale;\n        style.transform = `scale(${scale}, ${scale}) translate(${offsetX}px, ${offsetY}px)`;\n      }\n      return style;\n    });\n    const maxMoveX = computed(() => {\n      if (state.imageRatio) {\n        const {\n          rootWidth,\n          rootHeight\n        } = props;\n        const displayWidth = vertical.value ? rootHeight / state.imageRatio : rootWidth;\n        return Math.max(0, (state.scale * displayWidth - rootWidth) / 2);\n      }\n      return 0;\n    });\n    const maxMoveY = computed(() => {\n      if (state.imageRatio) {\n        const {\n          rootWidth,\n          rootHeight\n        } = props;\n        const displayHeight = vertical.value ? rootHeight : rootWidth * state.imageRatio;\n        return Math.max(0, (state.scale * displayHeight - rootHeight) / 2);\n      }\n      return 0;\n    });\n    const setScale = (scale) => {\n      scale = clamp(scale, +props.minZoom, +props.maxZoom + 1);\n      if (scale !== state.scale) {\n        state.scale = scale;\n        emit(\"scale\", {\n          scale,\n          index: props.active\n        });\n      }\n    };\n    const resetScale = () => {\n      setScale(1);\n      state.moveX = 0;\n      state.moveY = 0;\n    };\n    const toggleScale = () => {\n      const scale = state.scale > 1 ? 1 : 2;\n      setScale(scale);\n      state.moveX = 0;\n      state.moveY = 0;\n    };\n    let fingerNum;\n    let startMoveX;\n    let startMoveY;\n    let startScale;\n    let startDistance;\n    let doubleTapTimer;\n    let touchStartTime;\n    const onTouchStart = (event) => {\n      const {\n        touches\n      } = event;\n      const {\n        offsetX\n      } = touch;\n      touch.start(event);\n      fingerNum = touches.length;\n      startMoveX = state.moveX;\n      startMoveY = state.moveY;\n      touchStartTime = Date.now();\n      state.moving = fingerNum === 1 && state.scale !== 1;\n      state.zooming = fingerNum === 2 && !offsetX.value;\n      if (state.zooming) {\n        startScale = state.scale;\n        startDistance = getDistance(event.touches);\n      }\n    };\n    const onTouchMove = (event) => {\n      const {\n        touches\n      } = event;\n      touch.move(event);\n      if (state.moving || state.zooming) {\n        preventDefault(event, true);\n      }\n      if (state.moving) {\n        const {\n          deltaX,\n          deltaY\n        } = touch;\n        const moveX = deltaX.value + startMoveX;\n        const moveY = deltaY.value + startMoveY;\n        state.moveX = clamp(moveX, -maxMoveX.value, maxMoveX.value);\n        state.moveY = clamp(moveY, -maxMoveY.value, maxMoveY.value);\n      }\n      if (state.zooming && touches.length === 2) {\n        const distance = getDistance(touches);\n        const scale = startScale * distance / startDistance;\n        setScale(scale);\n      }\n    };\n    const checkTap = () => {\n      if (fingerNum > 1) {\n        return;\n      }\n      const {\n        offsetX,\n        offsetY\n      } = touch;\n      const deltaTime = Date.now() - touchStartTime;\n      const TAP_TIME = 250;\n      const TAP_OFFSET = 5;\n      if (offsetX.value < TAP_OFFSET && offsetY.value < TAP_OFFSET && deltaTime < TAP_TIME) {\n        if (doubleTapTimer) {\n          clearTimeout(doubleTapTimer);\n          doubleTapTimer = null;\n          toggleScale();\n        } else {\n          doubleTapTimer = setTimeout(() => {\n            emit(\"close\");\n            doubleTapTimer = null;\n          }, TAP_TIME);\n        }\n      }\n    };\n    const onTouchEnd = (event) => {\n      let stopPropagation = false;\n      if (state.moving || state.zooming) {\n        stopPropagation = true;\n        if (state.moving && startMoveX === state.moveX && startMoveY === state.moveY) {\n          stopPropagation = false;\n        }\n        if (!event.touches.length) {\n          if (state.zooming) {\n            state.moveX = clamp(state.moveX, -maxMoveX.value, maxMoveX.value);\n            state.moveY = clamp(state.moveY, -maxMoveY.value, maxMoveY.value);\n            state.zooming = false;\n          }\n          state.moving = false;\n          startMoveX = 0;\n          startMoveY = 0;\n          startScale = 1;\n          if (state.scale < 1) {\n            resetScale();\n          }\n          if (state.scale > props.maxZoom) {\n            state.scale = +props.maxZoom;\n          }\n        }\n      }\n      preventDefault(event, stopPropagation);\n      checkTap();\n      touch.reset();\n    };\n    const onLoad = (event) => {\n      const {\n        naturalWidth,\n        naturalHeight\n      } = event.target;\n      state.imageRatio = naturalHeight / naturalWidth;\n    };\n    watch(() => props.active, resetScale);\n    watch(() => props.show, (value) => {\n      if (!value) {\n        resetScale();\n      }\n    });\n    useEventListener(\"touchmove\", onTouchMove, {\n      target: computed(() => {\n        var _a;\n        return (_a = swipeItem.value) == null ? void 0 : _a.$el;\n      })\n    });\n    return () => {\n      const imageSlots = {\n        loading: () => _createVNode(Loading, {\n          \"type\": \"spinner\"\n        }, null)\n      };\n      return _createVNode(SwipeItem, {\n        \"ref\": swipeItem,\n        \"class\": bem(\"swipe-item\"),\n        \"onTouchstartPassive\": onTouchStart,\n        \"onTouchend\": onTouchEnd,\n        \"onTouchcancel\": onTouchEnd\n      }, {\n        default: () => [slots.image ? _createVNode(\"div\", {\n          \"class\": bem(\"image-wrap\")\n        }, [slots.image({\n          src: props.src\n        })]) : _createVNode(Image, {\n          \"src\": props.src,\n          \"fit\": \"contain\",\n          \"class\": bem(\"image\", {\n            vertical: vertical.value\n          }),\n          \"style\": imageStyle.value,\n          \"onLoad\": onLoad\n        }, imageSlots)]\n      });\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}