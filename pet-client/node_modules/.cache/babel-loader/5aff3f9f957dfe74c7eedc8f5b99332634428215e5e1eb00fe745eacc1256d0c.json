{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, inBrowser, withInstall } from \"../utils/index.mjs\";\nimport { mountComponent, usePopupState } from \"../utils/mount-component.mjs\";\nimport VanDialog from \"./Dialog.mjs\";\nvar instance;\nfunction initInstance() {\n  var Wrapper = {\n    setup: function setup() {\n      var _usePopupState = usePopupState(),\n        state = _usePopupState.state,\n        toggle = _usePopupState.toggle;\n      return function () {\n        return _createVNode(VanDialog, _mergeProps(state, {\n          \"onUpdate:show\": toggle\n        }), null);\n      };\n    }\n  };\n  var _mountComponent = mountComponent(Wrapper);\n  instance = _mountComponent.instance;\n}\nfunction Dialog(options) {\n  if (!inBrowser) {\n    return Promise.resolve();\n  }\n  return new Promise(function (resolve, reject) {\n    if (!instance) {\n      initInstance();\n    }\n    instance.open(extend({}, Dialog.currentOptions, options, {\n      callback: function callback(action) {\n        (action === \"confirm\" ? resolve : reject)(action);\n      }\n    }));\n  });\n}\nDialog.defaultOptions = {\n  title: \"\",\n  width: \"\",\n  theme: null,\n  message: \"\",\n  overlay: true,\n  callback: null,\n  teleport: \"body\",\n  className: \"\",\n  allowHtml: false,\n  lockScroll: true,\n  transition: void 0,\n  beforeClose: null,\n  overlayClass: \"\",\n  overlayStyle: void 0,\n  messageAlign: \"\",\n  cancelButtonText: \"\",\n  cancelButtonColor: null,\n  cancelButtonDisabled: false,\n  confirmButtonText: \"\",\n  confirmButtonColor: null,\n  confirmButtonDisabled: false,\n  showConfirmButton: true,\n  showCancelButton: false,\n  closeOnPopstate: true,\n  closeOnClickOverlay: false\n};\nDialog.currentOptions = extend({}, Dialog.defaultOptions);\nDialog.alert = Dialog;\nDialog.confirm = function (options) {\n  return Dialog(extend({\n    showCancelButton: true\n  }, options));\n};\nDialog.close = function () {\n  if (instance) {\n    instance.toggle(false);\n  }\n};\nDialog.setDefaultOptions = function (options) {\n  extend(Dialog.currentOptions, options);\n};\nDialog.resetDefaultOptions = function () {\n  Dialog.currentOptions = extend({}, Dialog.defaultOptions);\n};\nDialog.Component = withInstall(VanDialog);\nDialog.install = function (app) {\n  app.use(Dialog.Component);\n  app.config.globalProperties.$dialog = Dialog;\n};\nexport { Dialog };","map":{"version":3,"names":["createVNode","_createVNode","mergeProps","_mergeProps","extend","inBrowser","withInstall","mountComponent","usePopupState","VanDialog","instance","initInstance","Wrapper","setup","_usePopupState","state","toggle","_mountComponent","Dialog","options","Promise","resolve","reject","open","currentOptions","callback","action","defaultOptions","title","width","theme","message","overlay","teleport","className","allowHtml","lockScroll","transition","beforeClose","overlayClass","overlayStyle","messageAlign","cancelButtonText","cancelButtonColor","cancelButtonDisabled","confirmButtonText","confirmButtonColor","confirmButtonDisabled","showConfirmButton","showCancelButton","closeOnPopstate","closeOnClickOverlay","alert","confirm","close","setDefaultOptions","resetDefaultOptions","Component","install","app","use","config","globalProperties","$dialog"],"sources":["E:/vue3/pet-home-master/pet-client/node_modules/vant/es/dialog/function-call.mjs"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, inBrowser, withInstall } from \"../utils/index.mjs\";\nimport { mountComponent, usePopupState } from \"../utils/mount-component.mjs\";\nimport VanDialog from \"./Dialog.mjs\";\nlet instance;\nfunction initInstance() {\n  const Wrapper = {\n    setup() {\n      const {\n        state,\n        toggle\n      } = usePopupState();\n      return () => _createVNode(VanDialog, _mergeProps(state, {\n        \"onUpdate:show\": toggle\n      }), null);\n    }\n  };\n  ({\n    instance\n  } = mountComponent(Wrapper));\n}\nfunction Dialog(options) {\n  if (!inBrowser) {\n    return Promise.resolve();\n  }\n  return new Promise((resolve, reject) => {\n    if (!instance) {\n      initInstance();\n    }\n    instance.open(extend({}, Dialog.currentOptions, options, {\n      callback: (action) => {\n        (action === \"confirm\" ? resolve : reject)(action);\n      }\n    }));\n  });\n}\nDialog.defaultOptions = {\n  title: \"\",\n  width: \"\",\n  theme: null,\n  message: \"\",\n  overlay: true,\n  callback: null,\n  teleport: \"body\",\n  className: \"\",\n  allowHtml: false,\n  lockScroll: true,\n  transition: void 0,\n  beforeClose: null,\n  overlayClass: \"\",\n  overlayStyle: void 0,\n  messageAlign: \"\",\n  cancelButtonText: \"\",\n  cancelButtonColor: null,\n  cancelButtonDisabled: false,\n  confirmButtonText: \"\",\n  confirmButtonColor: null,\n  confirmButtonDisabled: false,\n  showConfirmButton: true,\n  showCancelButton: false,\n  closeOnPopstate: true,\n  closeOnClickOverlay: false\n};\nDialog.currentOptions = extend({}, Dialog.defaultOptions);\nDialog.alert = Dialog;\nDialog.confirm = (options) => Dialog(extend({\n  showCancelButton: true\n}, options));\nDialog.close = () => {\n  if (instance) {\n    instance.toggle(false);\n  }\n};\nDialog.setDefaultOptions = (options) => {\n  extend(Dialog.currentOptions, options);\n};\nDialog.resetDefaultOptions = () => {\n  Dialog.currentOptions = extend({}, Dialog.defaultOptions);\n};\nDialog.Component = withInstall(VanDialog);\nDialog.install = (app) => {\n  app.use(Dialog.Component);\n  app.config.globalProperties.$dialog = Dialog;\n};\nexport {\n  Dialog\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}